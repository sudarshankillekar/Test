<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-08-11T18:59:26 IST" name="Default suite" finished-at="2024-08-11T19:00:10 IST" duration-ms="43352">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:parallel.parallelRun@4c60d6e9]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2024-08-11T18:59:26 IST" name="Default test" finished-at="2024-08-11T19:00:10 IST" duration-ms="43352">
      <class name="parallel.parallelRun">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:parallel.parallelRun@4c60d6e9]" started-at="2024-08-11T18:59:26 IST" name="setUpClass" finished-at="2024-08-11T18:59:27 IST" duration-ms="542" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@19553973]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:parallel.parallelRun@4c60d6e9]" started-at="2024-08-11T18:59:27 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-08-11T19:00:10 IST" duration-ms="42731" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["User fills device details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Create Job"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:parallel.parallelRun@4c60d6e9]" started-at="2024-08-11T18:59:27 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-08-11T18:59:57 IST" duration-ms="30097" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verifying Dashboard page Nav options"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["DashBoardPage"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError
at org.junit.Assert.fail(Assert.java:87)
at org.junit.Assert.assertTrue(Assert.java:42)
at org.junit.Assert.assertTrue(Assert.java:53)
at parallel.DashBoardPageSteps.user_gets_the_nav_options(DashBoardPageSteps.java:50)
at âœ½.User gets the Nav options(classpath:parallel/DashBoardPage.feature:12)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:parallel.parallelRun@4c60d6e9]" started-at="2024-08-11T18:59:27 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-08-11T18:59:50 IST" duration-ms="23397" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify components username ,password ,Sign in button"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Login page feature"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:parallel.parallelRun@4c60d6e9]" started-at="2024-08-11T18:59:27 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-08-11T18:59:48 IST" duration-ms="21239" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Login page title"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Login page feature"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:parallel.parallelRun@4c60d6e9]" started-at="2024-08-11T18:59:27 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-08-11T18:59:49 IST" duration-ms="22453" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Login with correct credentials"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Login page feature"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:parallel.parallelRun@4c60d6e9]" started-at="2024-08-11T19:00:10 IST" name="tearDownClass" finished-at="2024-08-11T19:00:10 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- parallel.parallelRun -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
